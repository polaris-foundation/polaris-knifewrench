[tox]
skipsdist = true
envlist = lint,py39
source_package=dhos_knifewrench_adapter_worker
all_sources = {[tox]source_package} tests/

[flake8]
max-line-length = 100

[pytest]
filterwarnings =
    ignore::DeprecationWarning:neomodel.relationship
    ignore::DeprecationWarning:jose
    ignore:::flasgger

[testenv]
envdir = {toxworkdir}/py39

setenv = ENVIRONMENT = DEVELOPMENT
         FLASK_APP={[tox]source_package}/autoapp.py
         PROXY_URL = https://dev.sensynehealth.com
         HS_KEY=secret
         HS_ISSUER = http://localhost/
         REDIS_INSTALLED = False


commands = poetry install -v
           black --check {[tox]source_package} tests
           bandit -r {[tox]source_package} -lll
           isort --profile black {[tox]source_package}/ tests/ --check-only
           mypy {[tox]source_package}
           safety check
           coverage run --source {[tox]source_package} -m pytest
           coverage report
           coverage xml -i -o coverage-reports/coverage.xml
allowlist_externals =
        bandit
        bash
        black
        coverage
        isort
        mypy
        poetry
        python
        safety
        true
list_dependencies_command = true


[testenv:lint]
description = Run black, isort, and mypy to clean up source files
commands =
       black {[tox]all_sources}
       isort --profile black {[tox]all_sources}
       mypy {[tox]source_package} tests/

[testenv:debug]
description = Run last failing unit test and invoke debugger on errors
commands =
    pytest --lf --pdb

[testenv:update]
description = Update poetry lock files
commands = poetry update
